#redis中心
#redis的服务器地址
redis.host=127.0.0.1
#redis的服务端口
redis.port=6379
#密码
redis.password=


#最大连接数, 默认20个
redis.maxTotal=20
#最小空闲连接数, 默认0
redis.minIdle=8
#获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted), 如果超时就抛异常, 小于零:阻塞不确定的时间, 默认 - 1
redis.maxWait=1000
#最大空闲连接数, 默认20个
redis.maxIdle=20
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true
#在return给pool时，是否提前进行validate操作
redis.testOnReturn=false
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true
#表示一个对象至少停留在idle状态的最短时间，然后才能被idle object evitor扫描并驱逐；这一项只有在timeBetweenEvictionRunsMillis大于0时才有意义
redis.minEvictableIdleTimeMillis=1800000
#表示idle object evitor每次扫描的最多的对象数
redis.numTestsPerEvictionRun=3
#在minEvictableIdleTimeMillis基础上，加入了至少minIdle个对象已经在pool里面了。
#如果为-1，evicted不会根据idle time驱逐任何对象。如果minEvictableIdleTimeMillis>0，
#则此项设置无意义，且只有在timeBetweenEvictionRunsMillis大于0时才有意义
redis.softMinEvictableIdleTimeMillis=1800000
#表示idle object evitor两次扫描之间要sleep的毫秒数
redis.timeBetweenEvictionRunsMillis=60000

#cluster
cluster.host1.port=127.0.0.1:7000  
cluster.host2.port=127.0.0.1:7001  
cluster.host3.port=127.0.0.1:7002  
cluster.host4.port=127.0.0.1:7003  
cluster.host5.port=127.0.0.1:7004  
cluster.host6.port=127.0.0.1:7005  
#cluster